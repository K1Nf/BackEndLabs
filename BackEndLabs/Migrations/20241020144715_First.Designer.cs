// <auto-generated />
using System;
using BackEndLabs.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BackEndLabs.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241020144715_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BackEndLabs.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Created_By")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Deleted_By")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("Name");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "0001",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9880),
                            Created_By = 1,
                            Name = "Get-list-users"
                        },
                        new
                        {
                            Id = 2,
                            Code = "0002",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9883),
                            Created_By = 1,
                            Name = "Get-list-role"
                        },
                        new
                        {
                            Id = 3,
                            Code = "0003",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9885),
                            Created_By = 1,
                            Name = "Get-list-permission"
                        },
                        new
                        {
                            Id = 4,
                            Code = "0004",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9886),
                            Created_By = 1,
                            Name = "Read-users"
                        },
                        new
                        {
                            Id = 5,
                            Code = "0005",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9888),
                            Created_By = 1,
                            Name = "Read-role"
                        },
                        new
                        {
                            Id = 6,
                            Code = "0006",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9889),
                            Created_By = 1,
                            Name = "Read-permission"
                        },
                        new
                        {
                            Id = 7,
                            Code = "0007",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9890),
                            Created_By = 1,
                            Name = "Create-users"
                        },
                        new
                        {
                            Id = 8,
                            Code = "0008",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9891),
                            Created_By = 1,
                            Name = "Create-role"
                        },
                        new
                        {
                            Id = 9,
                            Code = "0009",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9893),
                            Created_By = 1,
                            Name = "Create-permission"
                        },
                        new
                        {
                            Id = 10,
                            Code = "0010",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9894),
                            Created_By = 1,
                            Name = "Update-users"
                        },
                        new
                        {
                            Id = 11,
                            Code = "0011",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9895),
                            Created_By = 1,
                            Name = "Update-role"
                        },
                        new
                        {
                            Id = 12,
                            Code = "0012",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9897),
                            Created_By = 1,
                            Name = "Update-permission"
                        },
                        new
                        {
                            Id = 13,
                            Code = "0013",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9898),
                            Created_By = 1,
                            Name = "Delete-users"
                        },
                        new
                        {
                            Id = 14,
                            Code = "0014",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9899),
                            Created_By = 1,
                            Name = "Delete-role"
                        },
                        new
                        {
                            Id = 15,
                            Code = "0015",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9900),
                            Created_By = 1,
                            Name = "Delete-permission"
                        },
                        new
                        {
                            Id = 16,
                            Code = "0016",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9902),
                            Created_By = 1,
                            Name = "Restore-users"
                        },
                        new
                        {
                            Id = 17,
                            Code = "0017",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9903),
                            Created_By = 1,
                            Name = "Restore-role"
                        },
                        new
                        {
                            Id = 18,
                            Code = "0018",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(9904),
                            Created_By = 1,
                            Name = "Restore-permission"
                        });
                });

            modelBuilder.Entity("BackEndLabs.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Created_By")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Deleted_By")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("Name");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "0001",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(8071),
                            Created_By = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Code = "0002",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(8075),
                            Created_By = 1,
                            Name = "User"
                        },
                        new
                        {
                            Id = 3,
                            Code = "0003",
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 104, DateTimeKind.Utc).AddTicks(8076),
                            Created_By = 1,
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("BackEndLabs.Models.RolesAndPermissions", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("PermissionId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Created_By")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Deleted_By")
                        .HasColumnType("integer");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolesAndPermissions");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            PermissionId = 1,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1328),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 2,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1331),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 3,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1332),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 4,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1333),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 5,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1334),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 6,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1335),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 7,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1336),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 8,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1337),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 9,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1338),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 10,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1338),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 11,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1339),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 12,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1340),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 13,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1341),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 14,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1342),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 15,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1343),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 16,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1348),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 17,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1354),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 18,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1355),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 1,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1356),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 4,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1357),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 10,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1359),
                            Created_By = 1
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 1,
                            Created_At = new DateTime(2024, 10, 20, 14, 47, 15, 106, DateTimeKind.Utc).AddTicks(1360),
                            Created_By = 1
                        });
                });

            modelBuilder.Entity("BackEndLabs.Models.Token", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Name");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("BackEndLabs.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("BirthDay")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BackEndLabs.Models.UsersAndRoles", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Created_By")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Deleted_By")
                        .HasColumnType("integer");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersAndRoles");
                });

            modelBuilder.Entity("BackEndLabs.Models.RolesAndPermissions", b =>
                {
                    b.HasOne("BackEndLabs.Models.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("BackEndLabs.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BackEndLabs.Models.UsersAndRoles", b =>
                {
                    b.HasOne("BackEndLabs.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("BackEndLabs.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
